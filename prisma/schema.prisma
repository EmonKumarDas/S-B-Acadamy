//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("SERVER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  INVITED
  VERIFIED
}

/// @@auth
/// @@allow('all', auth().id == this.id)
/// @@allow('all', auth().globalRole == 'ADMIN')
/// @@allow('create', globalRole != 'ADMIN')
/// @@allow('read', true)
model User {
  id               String            @id() @default(uuid())
  name             String?
  email            String?           @unique()
  pictureUrl       String?           @default("https://i.imgur.com/ZdJSK3Y.jpeg")
  tokenInvitation  String?
  stripeCustomerId String?
  status           UserStatus        @default(VERIFIED)
  globalRole       String            @default("USER")
  /// @password
  /// @omit
  password         String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt()
  pwaSubscriptions PwaSubscription[] @relation("user")
  attendances      Attendance[]      @relation("user")
  fees             Fee[]             @relation("user")
  results          Result[]          @relation("user")
  schedules        Schedule[]        @relation("user")
}

/// @@allow('all', true)
model Rule {
  id             String   @id() @default(uuid())
  title          String
  description    String?
  applicableRole String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Subject {
  id          String     @id() @default(uuid())
  name        String
  description String?
  results     Result[]   @relation("subject")
  schedules   Schedule[] @relation("subject")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Attendance {
  id        String   @id() @default(uuid())
  date      String
  status    String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Fee {
  id        String   @id() @default(uuid())
  amount    String
  dueDate   String
  status    String
  type      String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Result {
  id        String   @id() @default(uuid())
  score     String
  term      String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  subjectId String
  subject   Subject? @relation(fields: [subjectId], references: [id], name: "subject")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Schedule {
  id        String   @id() @default(uuid())
  dayOfWeek Float
  startTime String
  endTime   String
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  subjectId String
  subject   Subject? @relation(fields: [subjectId], references: [id], name: "subject")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model PwaSubscription {
  id        String   @id() @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
  userId    String
  user      User     @relation(fields: [userId], references: [id], name: "user")
}
